**********************************************************************
*      Welcome to PSUADE (version 1.6.0)
**********************************************************************
PSUADE - A Problem Solving environment for 
         Uncertainty Analysis and Design Exploration (1.6.0)
(for help, enter <help>)
======================================================================
psuade> load complete : nSamples = 1000
                nInputs  = 20
                nOutputs = 1
psuade> No transformation (e.g. log) on sample inputs nor outputs.
**********************************************************************
DeltaTest for variable selection
This test has the characteristics that the more important
a parameter is relative to the others, the smaller the 
subset is at the end of the test (sharp zoom into the most
important subset).
Note: If both nInputs and nSamples are large, this test
      may take a long time to run. So, be patient.)
======================================================================
Current best solution for output 1:
----------------------------------------------------------------------
0 1 1 0 1 1 1 0 0 0 1 1 0 1 0 0 1 1 1 0  = 9.771221e+02
1 1 1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 0 0 0  = 5.123489e+02 (1 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (2 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (3 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (4 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (5 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (6 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (7 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (8 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (9 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (10 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (11 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (12 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (13 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (14 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (15 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (16 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (17 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (18 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (19 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (20 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (21 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (22 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (23 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (24 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (25 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (26 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (27 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (28 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (29 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (30 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (31 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (32 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (33 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (34 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (35 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (36 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (37 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (38 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (39 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (40 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (41 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (42 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (43 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (44 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (45 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (46 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (47 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (48 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (49 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (50 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (51 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (52 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (53 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (54 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (55 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (56 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (57 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (58 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (59 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (60 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (61 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (62 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (63 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (64 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (65 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (66 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (67 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (68 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (69 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (70 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (71 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (72 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (73 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (74 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (75 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (76 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (77 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (78 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (79 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (80 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (81 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (82 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (83 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (84 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (85 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (86 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (87 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (88 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (89 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (90 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (91 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (92 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (93 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (94 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (95 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (96 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (97 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (98 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (99 of 100)
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02 (100 of 100)
**********************************************************************
Final Selections (based on 3 neighbors) = 
Rank  1 => 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 : delta =  3.4440e+02
Rank  2 => 1 1 1 1 1 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0 : delta =  3.5807e+02
Rank  3 => 1 1 0 1 1 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0 : delta =  3.6434e+02
Rank  4 => 1 1 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 : delta =  3.6718e+02
Rank  5 => 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 1 0 0 0 0 : delta =  3.6788e+02
Rank  6 => 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 0 0 0 0 0 : delta =  3.6942e+02
Rank  7 => 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 1 0 : delta =  3.6967e+02
Rank  8 => 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 : delta =  3.7221e+02
Rank  9 => 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 1 0 0 0 : delta =  3.7268e+02
Rank 10 => 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 1 : delta =  3.7296e+02
----------------------------------------------------------------------
Delta test ranking is now in matlabdelta.m.
Order of importance (based on 20 best configurations): 
(D)Rank    1 : input    8 (score = 100 )
(D)Rank    2 : input    9 (score = 100 )
(D)Rank    3 : input    4 (score = 100 )
(D)Rank    4 : input    1 (score = 100 )
(D)Rank    5 : input    6 (score = 100 )
(D)Rank    6 : input    2 (score = 100 )
(D)Rank    7 : input   10 (score = 100 )
(D)Rank    8 : input    5 (score = 95 )
(D)Rank    9 : input    7 (score = 75 )
(D)Rank   10 : input    3 (score = 70 )
(D)Rank   11 : input   12 (score = 14 )
(D)Rank   12 : input   17 (score = 14 )
(D)Rank   13 : input   11 (score = 9 )
(D)Rank   14 : input   16 (score = 9 )
(D)Rank   15 : input   13 (score = 9 )
(D)Rank   16 : input   19 (score = 5 )
(D)Rank   17 : input   15 (score = 4 )
(D)Rank   18 : input   18 (score = 4 )
(D)Rank   19 : input   20 (score = 4 )
(D)Rank   20 : input   14 (score = 0 )
**********************************************************************
Final test using the most important parameters incrementally:
----------------------------------------------------------------------
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0  = 1.090733e+03
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0  = 9.218154e+02
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0  = 7.939311e+02
0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0  = 8.226454e+02
1 0 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0  = 7.369146e+02
1 0 0 1 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0  = 6.610034e+02
1 1 0 1 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0  = 5.183136e+02
1 1 0 1 0 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0  = 4.217797e+02
1 1 0 1 1 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.643443e+02
1 1 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.671806e+02
1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0  = 3.443973e+02
1 1 1 1 1 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0  = 3.833770e+02
1 1 1 1 1 1 1 1 1 1 0 1 0 0 0 0 1 0 0 0  = 4.049393e+02
1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 0 0 0  = 4.193787e+02
1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 1 0 0 0  = 4.242811e+02
1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 0 0 0  = 4.479868e+02
1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 0 1 0  = 4.658367e+02
1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 0  = 4.872015e+02
1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0  = 4.969646e+02
1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1  = 5.188917e+02
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1  = 5.128450e+02
**********************************************************************
psuade> SumOfTrees: initializing trees.
SumOfTrees: building 100 trees.
Sum-of-trees ranking is now in matlabsot.m.
**********************************************************************
* SumOfTrees screening rankings (with bootstrapping)
* Minimum points per node = 10
**********************************************************************
*  Rank   1 : Input =  10 (score = 100.0)
*  Rank   2 : Input =   8 (score = 87.6)
*  Rank   3 : Input =   9 (score = 87.2)
*  Rank   4 : Input =   7 (score = 29.4)
*  Rank   5 : Input =   3 (score = 22.2)
*  Rank   6 : Input =   1 (score = 17.0)
*  Rank   7 : Input =   5 (score = 10.5)
*  Rank   8 : Input =   2 (score =  8.7)
*  Rank   9 : Input =   4 (score =  8.5)
*  Rank  10 : Input =  11 (score =  8.3)
*  Rank  11 : Input =   6 (score =  7.9)
*  Rank  12 : Input =  15 (score =  7.4)
*  Rank  13 : Input =  12 (score =  7.1)
*  Rank  14 : Input =  13 (score =  7.0)
*  Rank  15 : Input =  18 (score =  5.2)
*  Rank  16 : Input =  20 (score =  5.0)
*  Rank  17 : Input =  16 (score =  4.6)
*  Rank  18 : Input =  14 (score =  4.5)
*  Rank  19 : Input =  17 (score =  3.6)
*  Rank  20 : Input =  19 (score =  3.0)
**********************************************************************
sot_sa score (sum of all std dev) = 1.047836e+03
psuade> MARS (0) or MARS with bagging (1) ? Mars ranking is now in matlabmarsa.m.
**********************************************************************
* Mars screening rankings 
**********************************************************************
*  Rank   1 : Input =   3 (score = 100.0)
*  Rank   2 : Input =   1 (score = 91.6)
*  Rank   3 : Input =   2 (score = 90.4)
*  Rank   4 : Input =   4 (score = 73.7)
*  Rank   5 : Input =  10 (score = 64.8)
*  Rank   6 : Input =   8 (score = 63.5)
*  Rank   7 : Input =   9 (score = 61.0)
*  Rank   8 : Input =   5 (score = 46.7)
*  Rank   9 : Input =   6 (score = 42.2)
*  Rank  10 : Input =   7 (score = 38.8)
*  Rank  11 : Input =  11 (score = 11.3)
*  Rank  12 : Input =  15 (score = 11.3)
*  Rank  13 : Input =  19 (score =  8.1)
*  Rank  14 : Input =  12 (score =  6.8)
*  Rank  15 : Input =  13 (score =  6.8)
*  Rank  16 : Input =  18 (score =  5.5)
*  Rank  17 : Input =  14 (score =  0.0)
*  Rank  18 : Input =  16 (score =  0.0)
*  Rank  19 : Input =  17 (score =  0.0)
*  Rank  20 : Input =  20 (score =  0.0)
**********************************************************************
psuade> 